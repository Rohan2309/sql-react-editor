{"version":3,"sources":["modules/misc/index.js","constants/constants.js","components/reusable/Button.js","hooks/useData.js","components/table/Table.js","components/table/TableSection.js"],"names":["classNames","classes","filter","Boolean","join","TABLE_NAMES","Button","children","className","handleClick","onClick","PageButton","rest","type","useData","tableName","useState","data","setData","error","setError","runtime","setRuntime","useEffect","t0","performance","now","find","name","fetch","getURL","headers","Accept","then","res","ok","json","Error","alasql","promise","toast","success","catch","e","message","convertToJson","atob","content","replace","fetchData","t1","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","length","useAsyncDebounce","value","undefined","Table","columns","completeData","query","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","previousPage","nextPage","canPreviousPage","canNextPage","state","pageOptions","setPageSize","gotoPage","pageCount","map","headerGroup","getHeaderGroupProps","column","scope","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","disabled","pageIndex","xmlns","viewBox","fill","id","fillRule","d","clipRule","TableSection","React","memo","isOpen","useMemo","Object","keys","key","Header","accessor","queryData","slice","src","Loader","alt"],"mappings":"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","file":"static/js/5.3e622539.chunk.js","sourcesContent":["const downloadFile = ({ data, fileName, fileType }) => {\r\n  const blob = new Blob([data], { type: fileType });\r\n\r\n  const a = document.createElement(\"a\");\r\n  a.download = fileName;\r\n  a.href = window.URL.createObjectURL(blob);\r\n  const clickEvt = new MouseEvent(\"click\", {\r\n    view: window,\r\n    bubbles: true,\r\n    cancelable: true,\r\n  });\r\n  a.dispatchEvent(clickEvt);\r\n  a.remove();\r\n};\r\n\r\nexport const exportToJson = (data, query) => {\r\n  downloadFile({\r\n    data: JSON.stringify(data),\r\n    fileName: `${query}.json`,\r\n    fileType: \"text/json\",\r\n  });\r\n};\r\n\r\nexport function classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n","const TABLE_NAMES = [\r\n  \"regions\",\r\n  \"categories\",\r\n  \"customers\",\r\n  \"employees\",\r\n  \"order_details\",\r\n  \"orders\",\r\n  \"products\",\r\n];\r\n\r\nexport default TABLE_NAMES;\r\n","import React from \"react\";\r\nimport { classNames } from \"../../modules/misc\";\r\n\r\nexport const Button = ({ children, className, handleClick }) => {\r\n  return (\r\n    <button\r\n      className={classNames(\r\n        \"bg-primary-dark hover:bg-secondary-dark transition-colors text-white rounded-md font-semibold px-4 py-2 my-4 shadow-lg\",\r\n        className\r\n      )}\r\n      onClick={handleClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const PageButton = ({ children, className, ...rest }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={classNames(\r\n        \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\",\r\n        className\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport alasql from \"alasql\";\r\nimport toast from \"react-hot-toast\";\r\nimport TABLE_NAMES from \"../constants/constants\";\r\n\r\nconst getURL = (name) =>\r\n  `https://api.github.com/repos/graphql-compose/graphql-compose-examples/contents/examples/northwind/data/csv/${name}.csv`;\r\n\r\nconst useData = (tableName) => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [runtime, setRuntime] = useState(\"\");\r\n  const convertToJson = (data) => {\r\n    alasql\r\n      .promise(\"SELECT * FROM CSV(?, {headers: false, separator:','})\", [data])\r\n      .then((data) => {\r\n        setData(data);\r\n        toast.success(\"Query run successfully\");\r\n      })\r\n      .catch((e) => {\r\n        toast.error(e.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = (tableName) => {\r\n      setData([]);\r\n      const name = TABLE_NAMES.find((name) => name === tableName);\r\n      if (name) {\r\n        setError(false);\r\n        fetch(getURL(tableName), {\r\n          headers: {\r\n            Accept: \"application/vnd.github.v4+raw\",\r\n          },\r\n        })\r\n          .then((res) => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            } else {\r\n              throw new Error(\"Something went wrong\");\r\n            }\r\n          })\r\n          .then((data) => convertToJson(atob(data.content.replace(\"\\n\", \"\"))))\r\n          .catch((error) => {\r\n            toast.error(error.message);\r\n          });\r\n      } else {\r\n        setError(true);\r\n        toast.error(\"Please enter a valid query\");\r\n      }\r\n    };\r\n    let t0 = performance.now(); //start time\r\n    fetchData(tableName);\r\n    let t1 = performance.now(); //end time\r\n    setRuntime(t1 - t0);\r\n  }, [tableName]);\r\n\r\n  return { data, runtime, error };\r\n};\r\n\r\nexport default useData;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  useSortBy,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport { Button, PageButton } from \"../reusable/Button\";\r\nimport CsvDownload from \"react-json-to-csv\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { exportToJson } from \"../../modules/misc\";\r\n\r\nconst GlobalFilter = ({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) => {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <>\r\n      <label className=\"flex gap-x-2 items-baseline\"></label>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Table = ({ columns, data, completeData, query }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    previousPage,\r\n    nextPage,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    state,\r\n    setPageSize,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setGlobalFilter,\r\n    preGlobalFilteredRows,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-between items-center\">\r\n        <GlobalFilter\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          globalFilter={state.globalFilter}\r\n          setGlobalFilter={setGlobalFilter}\r\n        />\r\n        <div></div>\r\n      </div>\r\n\r\n      {/* table */}\r\n      <div className=\"shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\r\n        <table\r\n          {...getTableProps()}\r\n          className=\"min-w-full divide-y divide-gray-200\"\r\n        >\r\n          <thead className=\"bg-primary-dark\">\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-4 text-left text-xs font-medium text-white  uppercase tracking-wider\"\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  >\r\n                    <span className=\" hover:text-gray-300\">\r\n                      {column.render(\"Header\")}\r\n                    </span>\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? \" ▼\"\r\n                          : \" ▲\"\r\n                        : \"\"}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody\r\n            {...getTableBodyProps()}\r\n            className=\"bg-white text-black divide-y divide-gray-200\"\r\n          >\r\n            {page.map((row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\"\r\n                      >\r\n                        {cell.render(\"Cell\")}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* Pagination */}\r\n      <div className=\"py-3 flex items-center justify-between\">\r\n        <div className=\"flex-1 flex justify-between sm:hidden\">\r\n          <Button\r\n            handleClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button handleClick={() => nextPage()} disabled={!canNextPage}>\r\n            Next\r\n          </Button>\r\n        </div>\r\n        <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n          <div className=\"flex gap-x-2\">\r\n            <span className=\"text-sm text-gray-700\">\r\n              Page <span className=\"font-medium\">{state.pageIndex + 1}</span> of{\" \"}\r\n              <span className=\"font-medium\">{pageOptions.length}</span>\r\n            </span>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <nav\r\n              className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\"\r\n              aria-label=\"Pagination\"\r\n            >\r\n              <PageButton\r\n                className=\"rounded-l-md\"\r\n                onClick={() => gotoPage(0)}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                <span className=\"sr-only\">First</span>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <title id=\"pageOne\">Go to page one</title>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M15.707 15.707a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414zm-6 0a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 011.414 1.414L5.414 10l4.293 4.293a1 1 0 010 1.414z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </PageButton>\r\n              <PageButton\r\n                onClick={() => previousPage()}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                <span className=\"sr-only\">Previous</span>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <title id=\"previousPage\">Go to previous page</title>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </PageButton>\r\n              <PageButton onClick={() => nextPage()} disabled={!canNextPage}>\r\n                <span className=\"sr-only\">Next</span>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <title id=\"nextPage\">Go to next page</title>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </PageButton>\r\n              <PageButton\r\n                className=\"rounded-r-md\"\r\n                onClick={() => gotoPage(pageCount - 1)}\r\n                disabled={!canNextPage}\r\n              >\r\n                <span className=\"sr-only\">Last</span>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <title id=\"lastPage\">Go to last page</title>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M10.293 15.707a1 1 0 010-1.414L14.586 10l-4.293-4.293a1 1 0 111.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M4.293 15.707a1 1 0 010-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </PageButton>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useMemo } from \"react\";\r\nimport useData from \"../../hooks/useData\";\r\nimport Table from \"./Table\";\r\n\r\nimport Loader from \"../../assets/imgs/loader.svg\";\r\n\r\nconst TableSection = React.memo(({ query, isOpen }) => {\r\n  const { data, runtime, error } = useData(query);\r\n\r\n  const columns = useMemo(() => {\r\n    if (data.length > 0) {\r\n      return Object.keys(data[0]).map((key) => {\r\n        const result = data[0][key]\r\n          .replace(/([A-Z]+)/g, \" $1\")\r\n          .replace(/([A-Z][a-z])/g, \" $1\");\r\n\r\n        return {\r\n          Header: result,\r\n          accessor: key,\r\n        };\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const queryData = useMemo(() => data.slice(1), [data]);\r\n  if (error)\r\n    return (\r\n      <section\r\n        className={`${\r\n          isOpen ? \"col-start-2\" : \"col-start-1\"\r\n        } col-end-3 row-start-3 row-end-4 text-white m-6`}\r\n      >\r\n        <h1 className=\"text-right font-bold text-xl text-primary-dark\">\r\n          Invalid Input\r\n        </h1>\r\n      </section>\r\n    );\r\n  return (\r\n    <>\r\n      <section\r\n        className={`${\r\n          isOpen ? \"col-start-2\" : \"col-start-1\"\r\n        } col-end-3 row-start-3 row-end-4 text-white mx-6 my-12 lg:mx-12 overflow-hidden`}\r\n      >\r\n        {data.length > 0 ? (\r\n          <>\r\n            <Table\r\n              columns={columns}\r\n              completeData={data}\r\n              data={queryData}\r\n              query={query}\r\n            />\r\n          </>\r\n        ) : (\r\n          <img src={Loader} className=\"w-20 mx-auto\" alt=\"loader\" />\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TableSection;\r\n"],"sourceRoot":""}