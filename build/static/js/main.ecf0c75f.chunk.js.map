{"version":3,"sources":["components/reusable/Loader.js","App.js","index.js","assets/imgs/loader.svg"],"names":["Loader","className","src","LoaderSVG","alt","NavigationMenu","React","lazy","Editor","TableSection","App","useState","query","setQuery","value","setValue","isOpen","setIsOpen","position","gutter","containerClassName","containerStyle","toastOptions","duration","style","background","color","success","iconTheme","primary","secondary","error","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAWeA,EARA,WACb,OACE,qBAAKC,UAAU,oEAAf,SACE,qBAAKC,IAAKC,IAAWF,UAAU,OAAOG,IAAI,cCF1CC,EAAiBC,IAAMC,MAAK,kBAChC,gCAEIC,EAASF,IAAMC,MAAK,kBAAM,sDAC1BE,EAAeH,IAAMC,MAAK,kBAC9B,sDA0DaG,EAvDH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,2BAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEA,OACE,qCACE,cAAC,IAAD,CACEC,SAAS,aACTC,OAAQ,EACRC,mBAAmB,GACnBC,eAAgB,GAChBC,aAAc,CACZrB,UAAW,GACXsB,SAAU,IACVC,MAAO,CACLC,WAAY,UACZC,MAAO,WAETC,QAAS,CACPJ,SAAU,IACVK,UAAW,CACTC,QAAS,UACTC,UAAW,YAGfC,MAAO,CACLH,UAAW,CACTC,QAAS,UACTC,UAAW,eAKnB,qBAAK7B,UAAU,sEAAf,SACE,eAAC,WAAD,CAAU+B,SAAU,cAAC,EAAD,IAApB,UACE,cAAC3B,EAAD,CACEQ,SAAUA,EACVE,SAAUA,EACVC,OAAQA,EACRC,UAAWA,IAEb,cAACT,EAAD,CACEK,SAAUA,EACVC,MAAOA,EACPC,SAAUA,EACVC,OAAQA,IAETJ,EAAQ,cAACH,EAAD,CAAcG,MAAOA,EAAOI,OAAQA,IAAa,cCvDpEiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,+BCTX,QAA0B,qC","file":"static/js/main.ecf0c75f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport LoaderSVG from \"../../assets/imgs/loader.svg\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"w-screen h-screen bg-transparent flex items-center justify-center\">\r\n      <img src={LoaderSVG} className=\"w-20\" alt=\"loader\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, Suspense } from \"react\";\r\nimport \"./assets/output.css\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nimport Loader from \"./components/reusable/Loader\";\r\nconst NavigationMenu = React.lazy(() =>\r\n  import(\"./components/layouts/NavigationMenu\")\r\n);\r\nconst Editor = React.lazy(() => import(\"./components/editor/Editor\"));\r\nconst TableSection = React.lazy(() =>\r\n  import(\"./components/table/TableSection\")\r\n);\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [value, setValue] = useState(\"select * from customers\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Toaster\r\n        position=\"top-center\"\r\n        gutter={8}\r\n        containerClassName=\"\"\r\n        containerStyle={{}}\r\n        toastOptions={{\r\n          className: \"\",\r\n          duration: 5000,\r\n          style: {\r\n            background: \"#ffffff\",\r\n            color: \"#000000\",\r\n          },\r\n          success: {\r\n            duration: 3000,\r\n            iconTheme: {\r\n              primary: \"#00ff00\",\r\n              secondary: \"#ffffff\",\r\n            },\r\n          },\r\n          error: {\r\n            iconTheme: {\r\n              primary: \"#D73737\",\r\n              secondary: \"#ffffff\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n      <div className=\"grid grid-cols-layout-desktop grid-rows-layout-desktop min-h-screen\">\r\n        <Suspense fallback={<Loader />}>\r\n          <NavigationMenu\r\n            setQuery={setQuery}\r\n            setValue={setValue}\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n          />\r\n          <Editor\r\n            setQuery={setQuery}\r\n            value={value}\r\n            setValue={setValue}\r\n            isOpen={isOpen}\r\n          />\r\n          {query ? <TableSection query={query} isOpen={isOpen} /> : null}\r\n        </Suspense>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./App.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","export default __webpack_public_path__ + \"static/media/loader.4375e040.svg\";"],"sourceRoot":""}